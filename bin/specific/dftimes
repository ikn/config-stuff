#! /usr/bin/env python2

import sys
import urllib
import urllib2

import htmlparse


s = 'scoresRecent'
t = 'timesRecent'
what = {
    'score': s,
    's': s,
    'ss': s,
    'time': t,
    't': t,
    'any%': t,
    'any': t
}[sys.argv[1].lower() if len(sys.argv) > 1 else 'score']

url = 'http://dustworth.com/profileData.php'
post_data = {
    'action': 'request',
    'type': 'original',
    'player': 'J',
    'id': '69816'
}

req = urllib2.Request(url, urllib.urlencode(post_data))
body = urllib2.urlopen(req).read()
tree = htmlparse.HTMLTree(body)


def rank_score (rank):
    return sum({
        'S': 4, 'A': 3, 'B': 2, 'C': 1, 'D': 0
    }[c] for c in rank) if what == s else 0


def data_from_id (ident):
    data = []
    for lvl in (set(tree.selection('#{} p'.format(ident))) -
                set(tree.selection('#{} p.columnTotal'.format(ident)))):
        try:
            lvl_data = lvl.spans[0]._a.textnode.text.split()
            data.append({
                'name': lvl._a.textnode.text,
                'pos': int(lvl_data[0][1:]),
                'rank': lvl_data[2]
            })
        except (AttributeError, IndexError):
            print >> sys.stderr, 'failed:', repr(lvl.out())
    return data


scores = data_from_id(what)
scores.sort(key=lambda data: (-rank_score(data['rank']), data['pos']))
for lvl in scores:
    print (('{} '.format(lvl['rank']) if what == s else '') +
           '#{1:<6} {0}'.format(lvl['name'], lvl['pos']))
