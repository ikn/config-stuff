#! /usr/bin/env bash

IKN_DIR=~/Documents/Coding/web/ikn/ikn
IKN_AWS_S3_PROFILE=ikn_upload
IKN_AWS_S3_BUCKET=media.ikn.org.uk

ikn-build () {
    make -C "$IKN_DIR"
}

ikn-test () {
    "$WEB_BROWSER" localhost:8000 &
    python -m http.server -d "$IKN_DIR"/dist
}

ikn-push () {
    local subdir="${1:-}"

    ikn-build || return 1

    while [ "${subdir%/}" != "$subdir" ]; do
        subdir="${subdir%/}"
    done
    local src_dir="$IKN_DIR/dist/$subdir"
    local dest_dir="public_html/$subdir"
    local cmd="mirror --reverse --dereference --delete --verbose"
    local cmd_args="$(esc-cmdline "$src_dir" "$dest_dir")"
    lftp -c "connect montana.footholds.net && $cmd $cmd_args" || return 1

    make -C "$IKN_DIR" clean
}

ikn-push-doc () {
    local mode="$1"
    local source_path="$2"
    local base_url="$3"
    local dest_path="$source_path"/../doc

    python-project-doc-build "$mode" "$source_path" "$dest_path" "$base_url" &&
        ikn-push
}

_ikn-aws-s3 () {
    aws s3 --profile "$IKN_AWS_S3_PROFILE" "$@"
}

_ikn-aws-s3-norm-dir () {
    local path="$1"
    path="${path##/}"
    path="${path%%/}"
    echo "$path${path:+/}"
}

ikn-push-media () {
    [ "$#" -ne 2 ] && {
        echo >&2 "error: expected arguments: source file, dest remote dir"
        return 2
    }
    local src_file="$1"
    local dest_dir="$(_ikn-aws-s3-norm-dir "$2")"
    local dest_file="$dest_dir${src_file##*/}"
    dest_uri="s3://$IKN_AWS_S3_BUCKET/$dest_file"
    _ikn-aws-s3 cp --acl public-read "$src_file" "$dest_uri" >&2 && {
        local dest_path="$(echo -n "$dest_file" | urlencode plus)"
        local dest_url="http://player.media.ikn.org.uk/$dest_path"
        echo -n "$dest_url" | xclip -selection clipboard
        echo
        echo "$dest_url"
    }
}

ikn-rm-media () {
    [ "$#" -ne 1 ] && {
        echo >&2 "error: expected argument: file path"
        return 2
    }
    local file="$1"
    _ikn-aws-s3 rm "s3://$IKN_AWS_S3_BUCKET/$file" >&2
}

_complete_ikn-push () {
    if [ "$COMP_CWORD" -eq 1 ]; then
        local IFS=$'\n'
        local reply=($(compgen -o dirnames "$IKN_DIR/dist/$2"))
        local f
        for f in "${reply[@]}"; do
            # imitate `compopt -o filenames`
            [ -d "$f" ] && {
                f="$f/"
                compopt -o nospace
            }
            COMPREPLY+=("${f#$IKN_DIR/dist/}")
        done
    fi
}

_complete_ikn-push-media () {
    if [ "$COMP_CWORD" -eq 1 ]; then
        compopt -o filenames
        local IFS=$'\n'
        COMPREPLY=($(compgen -f "$2"))

    elif [ "$COMP_CWORD" -eq 2 ]; then
        if [[ $2 == */* ]]; then
            local base_dir="$(_ikn-aws-s3-norm-dir "${2%/*}")"
        else
            local base_dir=
        fi

        local dirs="$(
            _ikn-aws-s3 ls "s3://$IKN_AWS_S3_BUCKET/$base_dir" |
                sed 's/^ *//' |
                grep '^PRE' |
                sed 's/^PRE *//' |
                while read -r dir; do
                    echo "$base_dir$dir"
                done
        )"

        compopt -o nospace
        compopt -o filenames
        local IFS=$'\n'
        COMPREPLY=($(compgen -W "$dirs" "$2"))
    fi
}

_complete_ikn-rm-media () {
    if [[ $2 == */* ]]; then
        local base_dir="$(_ikn-aws-s3-norm-dir "${2%/*}")"
    else
        local base_dir=
    fi

    local files="$(
        _ikn-aws-s3 ls "s3://$IKN_AWS_S3_BUCKET/$base_dir" |
            sed -E 's/^( +PRE +|([^ ]+ +){3})//' |
            while read -r file; do
                echo "$base_dir$file"
            done
    )"

    compopt -o nospace
    compopt -o filenames
    local IFS=$'\n'
    COMPREPLY=($(compgen -W "$files" "$2"))
}

complete -F _complete_ikn-push ikn-push
complete -F _complete_ikn-push-media ikn-push-media
complete -F _complete_ikn-rm-media ikn-rm-media
