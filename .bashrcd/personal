#! /bin/bash

export FTP_DIR="$HOME/ftp"
export JAR=fastjar
export SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS=0

source ~/bin/specific/ftpmnt

alias fcsh-wrap='fcsh-wrap -optimize=true -static-link-runtime-shared-libraries=true'
alias fcsh-wrap-dbg='fcsh-wrap -compiler.debug=true'
alias transmission-daemon='transmission-daemon -g ~/.config/transmission/'
alias fplog='tail -n 0 -f ~/.macromedia/Flash_Player/Logs/flashlog.txt 2>/dev/null'
alias fp='flashplayerdebugger *.swf 2> /dev/null'
alias toggle-redshift='killall -USR1 redshift'

_ytdl-limit-res () {
    echo "best[height<=$1]/bestvideo[height<=$1]+bestaudio"
}

alias youtube-dl='youtube-dl --prefer-free-formats -f "$(_ytdl-limit-res 720)"'

export YTDL_OUTPUT_DIR=~/media/videos

_ytdl () {
    local format='[%(uploader)s] [%(upload_date)s] %(title)s [%(id)s].%(ext)s'
    youtube-dl -o "$YTDL_OUTPUT_DIR/$format" "$@"
}

alias ytdl='_ytdl --no-playlist'
alias ytdl-low='ytdl -f "$(_ytdl-limit-res 360)"'
alias ytdl-playlist='YTDL_OUTPUT_DIR="$YTDL_OUTPUT_DIR/%(playlist)s" _ytdl'
alias ytdl-low-playlist='ytdl-playlist -f "$(_ytdl-limit-res 360)"'
alias ytdl-new='ytdl `cat ~/media/dl-list` && rm ~/media/dl-list'

ytvlc () {
    vlc "$(youtube-dl -g --max-quality 22 --prefer-free-formats "$@")" \
        --meta-title="$(youtube-dl -e "$1")"
}

alias ytvlc-low='ytvlc --max-quality 18'

fl () {
    if [ -z "$1" ]; then
        n=$(flash)
        if [ -z "$n" ]; then
            # nothing to play
            return
        else
            # play first video
            n=$(echo "$n" | head -n1 | cut -d" " -f1)
        fi
    else
        # got video to play
        n="$1"
    fi
    flash "$n" vlc
}

flcp () {
    if [ "$#" -ge 2 ]; then
        dest="$2"
        tmp="$(mktemp -d)"
        flash "$1" cp -t "$tmp"
        mv "$tmp/$1" "$dest"
        rm -rf "$tmp"
    else
        if [ -n "$1" ]; then
            dest="$1"
        else
            dest=.
        fi

        flash | cut -d" " -f1 | while read num; do
            flash "$num" cp -t "$dest"
        done
    fi
}

flcpto () {
    n="$(flash | head -n1 | cut -d" " -f1)"
    echo "$n"
    flcp "$n" "$1"
}

enc-recording () {
    ffmpeg -i "$3" -ss "$1" -t "$2" -c:a copy -c:v libx264 -preset slow "out-$3"
}

if [ "$STARTIRCREMOTE" = "y" ]; then
    irc () {
        TERM=xterm-256color ssh $host "bash -l -c 'tmux attach'" && exit
    }

    host=rpi irc || host=home irc
fi
