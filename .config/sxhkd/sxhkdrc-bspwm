## screenshot
Print
    scrot ~/'ss-%H:%M:%S-$wx$h-'"$RANDOM"'.png'
# without sleep, the key release causes scrot to exit
alt + Print
    sleep .2; scrot -s ~/'ss-%H:%M:%S-$wx$h-'"$RANDOM"'.png'
ctrl + Print
    scrot -d5 ~/'ss-%H:%M:%S-$wx$h-'"$RANDOM"'.png'
# without sleep, the key release causes scrot to exit
ctrl + alt + Print
    sleep .2; scrot -d5 -s ~/'ss-%H:%M:%S-$wx$h-'"$RANDOM"'.png'

## power/media
XF86Sleep
    (slock &) && jsession-quit suspend
ctrl + shift + comma
    /home/j/bin/nonspecific/audctl down
ctrl + shift + period
    /home/j/bin/nonspecific/audctl up
ctrl + shift + slash
    /home/j/bin/nonspecific/audctl toggle

## utils
super + l
    /home/j/bin/specific/lock
super + h
    spacefm
super + r
    /home/j/bin/specific/gmrun-smart

## programs
ctrl + alt + t
    urxvtc || urxvt
ctrl + alt + b
    qutebrowser
ctrl + alt + n
    urxvtc -e newsboat || urxvt -e newsboat
ctrl + alt + g
    pluma
ctrl + alt + k
    kate
ctrl + alt + f
    firefox
ctrl + alt + c
    gsimplecal
ctrl + alt + y
    bash -ic "ytvlc \"$(xclip -selection clipboard -o)\""
# toggle Thunderbird
Pause
    ~/bin/specific/toggle-window Thunderbird

## bspwm
# focus window
super + {a,comma,e,o}
    dir={west,north,east,south}; \
    if "$BSPWM_SCRIPTS_DIR"/node-in-direction "$dir"; then \
        bspc node -f "$dir"; \
    else \
        bspc monitor -f "$dir"; \
    fi
super + Tab
    target_wid="$("$BSPWM_SCRIPTS_DIR"/get-last-visible-window)"; \
    [ -n "$target_wid" ] && bspc node -f "$target_wid"
super + u
    bspc node -f last.urgent
super + ctrl + Tab
    bspc desktop -f last.occupied.local
super + space
    bspc node -f "$(xorg-choose-window aoeuhtns \
        -b "$(bspc query -N -n focused)")"
# close
super + d
    bspc node -c
# resize BR
super + alt + {a,comma,e,o}
    bspc node @{east -r -50,south -r -50,east -r +50,south -r +50}
# resize TL
super + shift + {a,comma,e,o}
    bspc node @{west -r -50,north -r -50,west -r +50,north -r +50}
# toggle floating
super + f
    if [ -z "$(bspc query -N -n focused.floating)" ]; then \
        bspc node focused -t floating; \
    else \
        bspc node focused -t tiled; \
    fi
# toggle monocle
super + m
    bspc desktop -l next

# swap
super + ctrl + {a,comma,e,o}
    dir={west,north,east,south}; \
    if "$BSPWM_SCRIPTS_DIR"/node-in-direction "$dir"; then \
        bspc node -s "$dir" --follow; \
    else \
        bspc node -m "$dir" --follow; \
    fi
super + s
    bspc node -s biggest.local.\!focused
super + alt + s
    bspc node -s "$(xorg-choose-window aoeuhtns \
        -b "$(bspc query -N -n focused)")" --follow
super + ctrl + shift + {a,comma,e,o}
    dir={west,north,east,south}; \
    if "$BSPWM_SCRIPTS_DIR"/node-in-direction "$dir"; then \
        "$BSPWM_SCRIPTS_DIR"/auto-presel br "$dir"; \
        bspc node -n "$dir" --follow; \
    else \
        bspc node -m "$dir" --follow; \
    fi
super + t
    "$BSPWM_SCRIPTS_DIR"/auto-presel br biggest.local.\!focused; \
    bspc node -n biggest.local.\!focused
super + alt + t
    target_wid="$(xorg-choose-window aoeuhtns \
        -b "$(bspc query -N -n focused)")"; \
    [ -z "$target_wid" ] && exit; \
    "$BSPWM_SCRIPTS_DIR"/auto-presel br "$target_wid"; \
    bspc node -n "$target_wid" --follow
# rotate
super + n
    "$BSPWM_SCRIPTS_DIR"/rotate-split

# switch desktop
ctrl + alt + {_,shift + }{a,comma,e,o}
    "$BSPWM_SCRIPTS_DIR"/desktop-wall {switch,switchwithwindow} \
        {west,north,east,south}

# reload sxhkd
super + Escape
    pkill -USR1 -x sxhkd
